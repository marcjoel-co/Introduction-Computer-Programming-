
#define HEIGHT 5

const char* ascii_art[][HEIGHT] = {
    // 'A'
    {
        "  *  ",
        " * * ",
        "*****",
        "*   *",
        "*   *"
    },
    // 'B'
    {
        "**** ",
        "*   *",
        "**** ",
        "*   *",
        "**** "
    },
    // 'C'
    {
        " ****",
        "*    ",
        "*    ",
        "*    ",
        " ****"
    },
    // 'D'
    {
        "**** ",
        "*   *",
        "*   *",
        "*   *",
        "**** "
    },
    // 'E'
    {
        "*****",
        "*    ",
        "*****",
        "*    ",
        "*****"
    },
    // 'F'
    {
        "*****",
        "*    ",
        "*****",
        "*    ",
        "*    "
    },
    // 'G'
    {
        " ****",
        "*    ",
        "*  **",
        "*   *",
        " ****"
    },
    // 'H'
    {
        "*   *",
        "*   *",
        "*****",
        "*   *",
        "*   *"
    },
    // 'I'
    {
        "*****",
        "  *  ",
        "  *  ",
        "  *  ",
        "*****"
    },
    // 'J'
    {
        "*****",
        "   * ",
        "   * ",
        "*  * ",
        " **  "
    },
    // 'K'
    {
        "*   *",
        "*  * ",
        "***  ",
        "*  * ",
        "*   *"
    },
    // 'L'
    {
        "*    ",
        "*    ",
        "*    ",
        "*    ",
        "*****"
    },
    // 'M'
    {
        "*   *",
        "** **",
        "* * *",
        "*   *",
        "*   *"
    },
    // 'N'
    {
        "*   *",
        "**  *",
        "* * *",
        "*  **",
        "*   *"
    },
    // 'O'
    {
        " *** ",
        "*   *",
        "*   *",
        "*   *",
        " *** "
    },
    // 'P'
    {
        "**** ",
        "*   *",
        "**** ",
        "*    ",
        "*    "
    },
    // 'Q'
    {
        " *** ",
        "*   *",
        "*   *",
        "*  **",
        " ****"
    },
    // 'R'
    {
        "**** ",
        "*   *",
        "**** ",
        "*  * ",
        "*   *"
    },
    // 'S'
    {
        " ****",
        "*    ",
        " *** ",
        "    *",
        "**** "
    },
    // 'T'
    {
        "*****",
        "  *  ",
        "  *  ",
        "  *  ",
        "  *  "
    },
    // 'U'
    {
        "*   *",
        "*   *",
        "*   *",
        "*   *",
        " *** "
    },
    // 'V'
    {
        "*   *",
        "*   *",
        "*   *",
        " * * ",
        "  *  "
    },
    // 'W'
    {
        "*   *",
        "*   *",
        "* * *",
        "** **",
        "*   *"
    },
    // 'X'
    {
        "*   *",
        " * * ",
        "  *  ",
        " * * ",
        "*   *"
    },
    // 'Y'
    {
        "*   *",
        " * * ",
        "  *  ",
        "  *  ",
        "  *  "
    },
    // 'Z'
    {
        "*****",
        "   * ",
        "  *  ",
        " *   ",
        "*****"
    },
    // 'a'
    {
        "     ",
        " *** ",
        "    *",
        " ****",
        "*   *"
    },
    // 'b'
    {
        "*    ",
        "*    ",
        "**** ",
        "*   *",
        "**** "
    },
    // 'c'
    {
        "     ",
        " *** ",
        "*    ",
        "*    ",
        " *** "
    },
    // 'd'
    {
        "    *",
        "    *",
        " ****",
        "*   *",
        " ****"
    },
    // 'e'
    {
        "     ",
        " *** ",
        "*   *",
        "****",
        " *** "
    },
    // 'f'
    {
        "  ***",
        " *   ",
        "**** ",
        " *   ",
        " *   "
    },
    // 'g'
    {
        "     ",
        " *** ",
        "*   *",
        " ****",
        "    *"
    },
    // 'h'
    {
        "*    ",
        "*    ",
        "**** ",
        "*   *",
        "*   *"
    },
    // 'i'
    {
        "  *  ",
        "     ",
        "  *  ",
        "  *  ",
        "  *  "
    },
    // 'j'
    {
        "   * ",
        "     ",
        "   * ",
        "*  * ",
        " **  "
    },
    // 'k'
    {
        "*    ",
        "*  * ",
        "***  ",
        "*  * ",
        "*   *"
    },
    // 'l'
    {
        "  *  ",
        "  *  ",
        "  *  ",
        "  *  ",
        "  *  "
    },
    // 'm'
    {
        "     ",
        "* * *",
        "*****",
        "* * *",
        "* * *"
    },
    // 'n'
    {
        "     ",
        "**** ",
        "*   *",
        "*   *",
        "*   *"
    },
    // 'o'
    {
        "     ",
        " *** ",
        "*   *",
        "*   *",
        " *** "
    },
    // 'p'
    {
        "     ",
        "**** ",
        "*   *",
        "**** ",
        "*    "
    },
    // 'q'
    {
        "     ",
        " ****",
        "*   *",
        " ****",
        "    *"
    },
    // 'r'
    {
        "     ",
        "**** ",
        "*    ",
        "*    ",
        "*    "
    },
    // 's'
    {
        "     ",
        " ****",
        " *** ",
        "    *",
        "**** "
    },

    {
        "  *  ",
        "*****",
        "  *  ",
        "  *  ",
        "  ***"
    },
    // 'u'
    {
        "     ",
        "*   *",
        "*   *",
        "*   *",
        " *** "
    },
    // 'v'
    {
        "     ",
        "*   *",
        "*   *",
        " * * ",
        "  *  "
    },
    // 'w'
    {
        "     ",
        "*   *",
        "* * *",
        "** **",
        "*   *"
    },

    {
        "     ",
        "*   *",
        " * * ",
        "  *  ",
        " * * "
    },
    // 'y'
    {
        "     ",
        "*   *",
        " *** ",
        "    *",
        " *** "
    },
    // 'z'
    {
        "     ",
        "*****",
        "  *  ",
        " *   ",
        "*****"
    }
};

int char_to_index(char c) {
    if (c >= 'A' && c <= 'Z') {
        return c - 'A';  // Uppercase letters
    } else if (c >= 'a' && c <= 'z') {
        return c - 'a' + 26;  // Lowercase letters (after uppercase)
    } else {
        return -1;  // Character not found
    }
}
